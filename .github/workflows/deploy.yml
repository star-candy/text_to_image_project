name: Deploy to AWS EC2

on:
  push:
    branches:
      - master  # master 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle 빌드
        run: |
          chmod +x gradlew
          ./gradlew clean build

      - name: EC2에 배포
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
        
          # ✅ .ssh 디렉터리 생성 (없을 경우)
          mkdir -p ~/.ssh
        
          # ✅ EC2 공개 키 등록
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        
          # ✅ SSH 연결 테스트
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $USER@$HOST "echo '✅ EC2 연결 성공!'"
        
          # ✅ 최신 JAR 파일 전송
          scp -o StrictHostKeyChecking=no -i ec2_key.pem build/libs/*.jar $USER@$HOST:/home/ubuntu/app/app.jar
        
          # ✅ EC2에서 애플리케이션 재시작
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $USER@$HOST <<EOF
            sudo systemctl stop myapp || true
            sudo mv /home/ubuntu/app/app.jar /home/ubuntu/app/latest.jar
            sudo systemctl start myapp
          EOF
